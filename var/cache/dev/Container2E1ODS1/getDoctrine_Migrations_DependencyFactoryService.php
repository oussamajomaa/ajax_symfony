<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'doctrine.migrations.dependency_factory' shared service.

include_once $this->targetDirs[3].'/vendor/doctrine/migrations/lib/Doctrine/Migrations/DependencyFactory.php';
include_once $this->targetDirs[3].'/vendor/doctrine/migrations/lib/Doctrine/Migrations/Configuration/Migration/ConfigurationLoader.php';
include_once $this->targetDirs[3].'/vendor/doctrine/migrations/lib/Doctrine/Migrations/Configuration/Migration/ExistingConfiguration.php';
include_once $this->targetDirs[3].'/vendor/doctrine/migrations/lib/Doctrine/Migrations/Configuration/Configuration.php';
include_once $this->targetDirs[3].'/vendor/doctrine/migrations/lib/Doctrine/Migrations/Metadata/Storage/MetadataStorageConfiguration.php';
include_once $this->targetDirs[3].'/vendor/doctrine/migrations/lib/Doctrine/Migrations/Metadata/Storage/TableMetadataStorageConfiguration.php';
include_once $this->targetDirs[3].'/vendor/doctrine/migrations/lib/Doctrine/Migrations/Configuration/EntityManager/EntityManagerLoader.php';
include_once $this->targetDirs[3].'/vendor/doctrine/migrations/lib/Doctrine/Migrations/Configuration/EntityManager/ExistingEntityManager.php';

$a = new \Doctrine\Migrations\Configuration\Configuration();

$b = new \Doctrine\Migrations\Metadata\Storage\TableMetadataStorageConfiguration();
$b->setTableName('migration_versions');
$b->setVersionColumnName('version');
$b->setVersionColumnLength(1024);
$b->setExecutedAtColumnName('executed_at');

$a->addMigrationsDirectory('DoctrineMigrations', ($this->targetDirs[3].'/src/Migrations'));
$a->setAllOrNothing(false);
$a->setCheckDatabasePlatform(true);
$a->setMetadataStorageConfiguration($b);

return $this->privates['doctrine.migrations.dependency_factory'] = \Doctrine\Migrations\DependencyFactory::fromEntityManager(new \Doctrine\Migrations\Configuration\Migration\ExistingConfiguration($a), new \Doctrine\Migrations\Configuration\EntityManager\ExistingEntityManager(($this->services['doctrine.orm.default_entity_manager'] ?? $this->load('getDoctrine_Orm_DefaultEntityManagerService.php'))), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
